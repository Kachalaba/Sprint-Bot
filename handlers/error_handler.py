import logging
from aiogram import types, Router, F
from aiogram.filters.exception import ExceptionTypeFilter
from aiogram.exceptions import TelegramAPIError

router = Router()

@router.error(ExceptionTypeFilter(Exception), -F.exception(TelegramAPIError))
async def handle_any_exception(event: types.ErrorEvent):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ –∫–æ–¥–µ.
    """
    exception_name = type(event.exception).__name__
    logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {exception_name}: {event.exception}", exc_info=True)

    if event.update.message:
        await event.update.message.answer(
            "–û–π, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫... üòü\n"
            "–í–∏–Ω–∏–∫–ª–∞ –Ω–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–∑–Ω—ñ—à–µ."
        )

@router.error(ExceptionTypeFilter(TelegramAPIError))
async def handle_telegram_api_error(event: types.ErrorEvent):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—à–∏–±–æ–∫, –∫–æ–≥–¥–∞ Telegram API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É.
    """
    logging.error(f"–ü–æ–º–∏–ª–∫–∞ API Telegram: {event.exception}")
