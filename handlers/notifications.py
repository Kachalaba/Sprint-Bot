from __future__ import annotations

from aiogram import Router, types
from aiogram.filters import Command

from notifications import NotificationService

router = Router()


@router.message(Command("notify_on"))
async def enable_notifications(
    message: types.Message, notifications: NotificationService
) -> None:
    """Enable scheduled and instant notifications for the chat."""

    subscribed = await notifications.subscribe(message.chat.id)
    if subscribed:
        text = (
            "üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–æ–≤–∞–Ω—ñ!\n"
            "–í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ —Å–ø—Ä–∏–Ω—Ç–∏ —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤."
        )
    else:
        text = "üîî –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤–∂–µ –±—É–ª–∏ —É–≤—ñ–º–∫–Ω–µ–Ω—ñ."
    await message.answer(text)


@router.message(Command("notify_off"))
async def disable_notifications(
    message: types.Message, notifications: NotificationService
) -> None:
    """Disable all notifications for the chat."""

    removed = await notifications.unsubscribe(message.chat.id)
    if removed:
        text = "üîï –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤–∏–º–∫–Ω–µ–Ω—ñ. –í–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—Ç–µ –∑–Ω–æ–≤—É –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ —ó—Ö –∫–æ–º–∞–Ω–¥–æ—é /notify_on."
    else:
        text = "üîï –ù–∞—Ä–∞–∑—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤–∂–µ –≤–∏–º–∫–Ω–µ–Ω—ñ."
    await message.answer(text)


@router.message(Command("notify_info"))
async def notification_info(
    message: types.Message, notifications: NotificationService
) -> None:
    """Share current notification settings and schedule details."""

    subscribed = await notifications.is_subscribed(message.chat.id)
    status = "—É–≤—ñ–º–∫–Ω–µ–Ω–æ ‚úÖ" if subscribed else "–≤–∏–º–∫–Ω–µ–Ω–æ ‚ùå"

    schedule = notifications.describe_schedule()
    next_run = notifications.next_sprint_run()
    weekday = notifications.weekday_name(next_run.weekday())
    next_label = f"{weekday}, {next_run:%d.%m –æ %H:%M}"

    text = (
        "<b>–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è SprintBot</b>\n"
        f"–°—Ç–∞—Ç—É—Å: {status}\n"
        f"{schedule}\n"
        f"–ù–∞–π–±–ª–∏–∂—á–µ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: {next_label}.\n\n"
        "–ö–æ–º–∞–Ω–¥–∏:\n"
        "‚Ä¢ /notify_on ‚Äî —É–≤—ñ–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è\n"
        "‚Ä¢ /notify_off ‚Äî –≤–∏–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è"
    )
    await message.answer(text)
